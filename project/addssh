#!/bin/bash

# Load Telegram configuration
source '/root/.vars'

# Valid Script
ipsaya=$(curl -sS ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")

# Variables
ip=$(wget -qO- ipv4.icanhazip.com)
city=$(cat /etc/xray/city 2>/dev/null || echo "Unknown city")
pubkey=$(cat /etc/slowdns/server.pub 2>/dev/null || echo "Pubkey not available")
domain=$(cat /etc/xray/domain 2>/dev/null || hostname -f)

# Function to send Telegram notification
send_telegram_notification() {
    local message="$1"
    if [[ -n "$bot_token" && -n "$telegram_id" ]]; then
        curl -s -X POST "https://api.telegram.org/bot$bot_token/sendMessage" \
            -d "chat_id=$telegram_id" \
            -d "parse_mode=HTML" \
            -d "text=$message" >/dev/null 2>&1
    fi
}

clear

while true; do
    read -p "   Name: " user
    if [[ ${#user} -lt 3 || ! "$user" =~ ^[a-zA-Z0-9_-]+$ ]]; then
        printf "\033[1A\033[0J"
        echo -e "${red}   Username cannot be empty${reset}"
        continue
    fi
    if grep -q "^### $user " /etc/ssh/.ssh.db; then
        random_number=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 5)
        original_user="$user"
        user="${random_number}${user}"
        echo -e "${yellow}   Username already exists. New username used: $user${reset}"
        break
    else
        break
    fi
done

echo ""
echo -e "—————————————————————————————————————"
echo "   Username : $user"

while true; do
    read -p "   Password: " passwd
    if [[ -z "$passwd" ]]; then
        echo -e "${red}   Password cannot be empty${reset}"
    else
        break
    fi
done

while true; do
    read -p "   Active period (days): " expired
    if [[ -z "$expired" ]]; then
        echo -e "${red}   Active period cannot be empty${reset}"
    elif ! [[ $expired =~ ^[0-9]+$ ]]; then
        echo -e "${red}   Active period must be a number${reset}"
    elif [[ $expired -lt 1 ]]; then
        echo -e "${red}   Active period must be at least 1 day${reset}"
    else
        break
    fi
done

while true; do
    read -p "   IP limit: " iplim
    if [[ -z "$iplim" ]]; then
        echo -e "${red}   IP limit cannot be empty${reset}"
    elif ! [[ $iplim =~ ^[0-9]+$ ]]; then
        echo -e "${red}   IP limit must be a number${reset}"
    elif [[ $iplim -lt 1 ]]; then
        echo -e "${red}   IP limit must be at least 1${reset}"
    else
        break
    fi
done

# Account creation process with error handling
if ! useradd -e $(date -d "$expired days" +"%Y-%m-%d") -s /bin/false -M $user 2>/dev/null; then
    error_message="
<b>━━━━━━━━━━━━━━━━━━</b>
<b>❌ SSH ACCOUNT ERROR</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>👤 USERNAME :</b> <code>$user</code>
<b>🚫 ERROR :</b> <code>Failed to create user account</code>
<b>🕐 TIME :</b> <code>$(date '+%Y-%m-%d %H:%M:%S')</code>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>⚠️ STATUS :</b> <b>ACCOUNT CREATION FAILED</b>
"
    send_telegram_notification "$error_message"
    echo -e "${red}Error: Failed to create user account${reset}"
    exit 1
fi

exp="$(chage -l $user | grep "Account expires" | awk -F": " '{print $2}')"

if ! echo -e "$passwd\n$passwd\n" | passwd $user &>/dev/null; then
    error_message="
<b>━━━━━━━━━━━━━━━━━━</b>
<b>❌ SSH ACCOUNT ERROR</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>👤 USERNAME :</b> <code>$user</code>
<b>🚫 ERROR :</b> <code>Failed to set password</code>
<b>🕐 TIME :</b> <code>$(date '+%Y-%m-%d %H:%M:%S')</code>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>⚠️ STATUS :</b> <b>PASSWORD SETTING FAILED</b>
"
    send_telegram_notification "$error_message"
    userdel $user 2>/dev/null
    echo -e "${red}Error: Failed to set password${reset}"
    exit 1
fi

if [[ $iplim != "0" ]]; then
    if ! echo "${iplim}" >/etc/ssh/${user} 2>/dev/null; then
        error_message="
<b>━━━━━━━━━━━━━━━━━━</b>
<b>❌ SSH ACCOUNT ERROR</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>👤 USERNAME :</b> <code>$user</code>
<b>🚫 ERROR :</b> <code>Failed to set IP limit</code>
<b>🕐 TIME :</b> <code>$(date '+%Y-%m-%d %H:%M:%S')</code>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>⚠️ STATUS :</b> <b>IP LIMIT SETTING FAILED</b>
"
        send_telegram_notification "$error_message"
        echo -e "${yellow}Warning: Failed to set IP limit${reset}"
    fi
fi

if ! echo "### ${user} $(date -d "$expired days" +"%Y-%m-%d")" >>/etc/ssh/.ssh.db 2>/dev/null; then
    error_message="
<b>━━━━━━━━━━━━━━━━━━</b>
<b>❌ SSH ACCOUNT ERROR</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>👤 USERNAME :</b> <code>$user</code>
<b>🚫 ERROR :</b> <code>Failed to update SSH database</code>
<b>🕐 TIME :</b> <code>$(date '+%Y-%m-%d %H:%M:%S')</code>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>⚠️ STATUS :</b> <b>DATABASE UPDATE FAILED</b>
"
    send_telegram_notification "$error_message"
    echo -e "${yellow}Warning: Failed to update SSH database${reset}"
fi

# Create configuration file
if ! cat >/var/www/html/ssh-$user.txt <<END 2>/dev/null
---------------------
SSH OVPN Account Details
---------------------
Username         : $user
Password         : $passwd
---------------------
IP               : $ip
Host             : $domain
Public Key       : ${pubkey}
Location         : $city
OpenSSH Port     : 443, 80, 22
UdpSSH Port      : 1-65535
Dropbear Port    : 443, 109
Dropbear WS Port : 443, 109
SSH WS Port      : 80
SSH SSL WS Port  : 443
SSL/TLS Port     : 443
OVPN WS SSL Port : 443
OVPN SSL Port    : 443
OVPN TCP Port    : 443, 1194
OVPN UDP Port    : 2200
BadVPN UDP       : 7100, 7300, 7300
---------------------
WSS Payload: GET wss://BUG.COM/ HTTP/1.1[crlf]Host: $domain[crlf]Upgrade: websocket[crlf][crlf] 
---------------------
OpenVPN Link     : http://$domain:85
---------------------
Expiration       : $exp
END
then
    error_message="
<b>━━━━━━━━━━━━━━━━━━</b>
<b>❌ SSH ACCOUNT ERROR</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>👤 USERNAME :</b> <code>$user</code>
<b>🚫 ERROR :</b> <code>Failed to create config file</code>
<b>🕐 TIME :</b> <code>$(date '+%Y-%m-%d %H:%M:%S')</code>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>⚠️ STATUS :</b> <b>CONFIG FILE CREATION FAILED</b>
"
    send_telegram_notification "$error_message"
    echo -e "${yellow}Warning: Failed to create configuration file${reset}"
fi

# Save log
{
    echo "───────────────────────────"
    echo "     SSH OVPN Account     "
    echo "───────────────────────────"
    echo "Username         : $user"
    echo "Password         : $passwd"
    echo "───────────────────────────"
    echo "IP               : $ip"
    echo "Host             : $domain"    
    echo "Location         : $city"
    echo "OpenSSH Port     : 443, 80, 22"
    echo "UdpSSH Port      : 1-65535"
    echo "DNS Port         : 443, 53, 22"
    echo "Dropbear Port    : 443, 109"
    echo "SSH WS Port      : 80, 8080"
    echo "SSH SSL WS Port  : 443"
    echo "SSL/TLS Port     : 443"
    echo "OVPN SSL Port    : 443"
    echo "OVPN TCP Port    : 1194"
    echo "OVPN UDP Port    : 2200"
    echo "Squid Proxy      : 3128"
    echo "BadVPN UDP       : 7100, 7300, 7300"
    echo "SlowDns Public Key: ${pubkey}"
    echo "───────────────────────────"
    echo "WSS Payload      : GET wss://BUG.COM/ HTTP/1.1[crlf]Host: $domain[crlf]Upgrade: websocket[crlf][crlf]"
    echo "───────────────────────────"
    echo "OpenVPN Link     : https://$domain:81/allovpn.zip"
    echo "───────────────────────────"
    echo "Save Account Link: https://$domain:81/ssh-$user.txt"
    echo "───────────────────────────"
    echo "Expiration       : $exp"
    echo ""
} >>/etc/xray/log-createssh-${user}.log

# ...existing code...

# Send success notification to Telegram
success_message="
<b>—————————————————————————————————————</b>
<b>     SSH OVPN Account      </b>
<b>———————————————————————————</b>
<b>Username         :</b> <code>$user</code>
<b>Password         :</b> <code>$passwd</code>
<b>—————————————————————————————————————</b>
<b>IP               :</b> <code>$ip</code>
<b>Host             :</b> <code>$domain</code>
<b>Location         :</b> <code>$city</code>
<b>OpenSSH Port     :</b> <code>443, 80, 22</code>
<b>UdpSSH Port      :</b> <code>1-65535</code>
<b>DNS Port         :</b> <code>443, 53, 22</code>
<b>Dropbear Port    :</b> <code>443, 109</code>
<b>SSH WS Port      :</b> <code>80</code>
<b>SSH SSL WS Port  :</b> <code>443</code>
<b>SSL/TLS Port     :</b> <code>443</code>
<b>OVPN SSL Port    :</b> <code>443</code>
<b>OVPN TCP Port    :</b> <code>1194</code>
<b>OVPN UDP Port    :</b> <code>2200</code>
<b>BadVPN UDP       :</b> <code>7100, 7300, 7300</code>
<b>SlowDns Public Key:</b> <code>${pubkey}</code>
<b>—————————————————————————————————————</b>
<b>WSS Payload      :</b> <code>GET wss://BUG.COM/ HTTP/1.1[crlf]Host: $domain[crlf]Upgrade: websocket[crlf][crlf]</code>
<b>—————————————————————————————————————</b>
<b>OpenVPN Link     :</b> <code>https://$domain:81/allovpn.zip</code>
<b>—————————————————————————————————————</b>
<b>Save Account Link:</b> <code>https://$domain:81/ssh-$user.txt</code>
<b>—————————————————————————————————————</b>
<b>Expiration       :</b> <code>$exp</code>
<b>—————————————————————————————————————</b>
"
send_telegram_notification "$success_message"

clear
echo -e "—————————————————————————————————————"
echo -e "     SSH OVPN Account      "
echo -e "───────────────────────────"
echo -e "Username         : $user"
echo -e "Password         : $passwd"
echo -e "—————————————————————————————————————"
echo -e "IP               : $ip"
echo -e "Host             : $domain"
echo -e "Location         : $city"
echo -e "OpenSSH Port     : 443, 80, 22"
echo -e "UdpSSH Port      : 1-65535"
echo -e "DNS Port         : 443, 53, 22"
echo -e "Dropbear Port    : 443, 109"
echo -e "SSH WS Port      : 80"
echo -e "SSH SSL WS Port  : 443"
echo -e "SSL/TLS Port     : 443"
echo -e "OVPN SSL Port    : 443"
echo -e "OVPN TCP Port    : 1194"
echo -e "OVPN UDP Port    : 2200"
echo -e "BadVPN UDP       : 7100, 7300, 7300"
echo -e "SlowDns Public Key: ${pubkey}"
echo -e "—————————————————————————————————————"
echo -e "WSS Payload      : GET wss://BUG.COM/ HTTP/1.1[crlf]Host: $domain[crlf]Upgrade: websocket[crlf][crlf]"
echo -e "—————————————————————————————————————"
echo -e "OpenVPN Link     : https://$domain:81/allovpn.zip"
echo -e "—————————————————————————————————————"
echo -e "Save Account Link: https://$domain:81/ssh-$user.txt"
echo -e "—————————————————————————————————————"
echo -e "Expiration       : $exp"
echo -e ""
echo -e "—————————————————————————————————————"